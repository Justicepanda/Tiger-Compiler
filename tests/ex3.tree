$
	<tiger-program>
		let
		<declaration-segment>
			<type-declaration-list>
			<var-declaration-list>
			<funct-declaration-list>
				<funct-declaration>
					function
					id
					(
					<param-list>
						<param>
							id
							:
							<type-id>
								id
						<param-list-tail>
					)
					<ret-type>
						:
						<type-id>
							id
					begin
					<stat-seq>
						<stat>
							return
							<expr>
								<andorterm>
									<ineqterm>
										<addterm>
											<multterm>
												<factor>
													(
													<expr>
														<andorterm>
															<ineqterm>
																<addterm>
																	<multterm>
																		<factor>
																			id
																			<factor-tail>
																				<lvalue>
																		<multterm2>
																	<addterm2>
																<ineqterm2>
															<andorterm2>
													)
												<multterm2>
											<addterm2>
										<ineqterm2>
									<andorterm2>
							;
						<stat-seq>
					end
					;
				<funct-declaration-list>
		in
		<stat-seq>
			<stat>
				id
				<stat-id>
					(
					<expr-list>
						<expr>
							<andorterm>
								<ineqterm>
									<addterm>
										<multterm>
											<factor>
												<const>
													INTLIT
											<multterm2>
										<addterm2>
									<ineqterm2>
								<andorterm2>
						<expr-list-tail>
					)
				;
			<stat-seq>
		end
