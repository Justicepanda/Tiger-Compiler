$
	<tiger-program>
		let
		<declaration-segment>
			<type-declaration-list>
				<type-declaration>
					type
					id
					=
					<type>
						array
						[
						INTLIT
						]
						of
						<type-id>
							id
					;
				<type-declaration-list>
			<var-declaration-list>
				<var-declaration>
					var
					<id-list>
						id
						<id-list-tail>
							,
							id
							<id-list-tail>
					:
					<type-id>
						id
					<optional-init>
						:=
						<const>
							INTLIT
					;
				<var-declaration-list>
					<var-declaration>
						var
						<id-list>
							id
							<id-list-tail>
								,
								id
								<id-list-tail>
						:
						<type-id>
							id
						<optional-init>
							:=
							<const>
								INTLIT
						;
					<var-declaration-list>
			<funct-declaration-list>
		in
		<stat-seq>
			<stat>
				for
				id
				:=
				<expr>
					<andorterm>
						<ineqterm>
							<addterm>
								<multterm>
									<factor>
										<const>
											INTLIT
									<multterm2>
								<addterm2>
							<ineqterm2>
						<andorterm2>
				to
				<expr>
					<andorterm>
						<ineqterm>
							<addterm>
								<multterm>
									<factor>
										<const>
											INTLIT
									<multterm2>
								<addterm2>
							<ineqterm2>
						<andorterm2>
				do
				<stat-seq>
					<stat>
						id
						<stat-id>
							<lvalue>
							:=
							<stat-id-tail>
								id
								<stat-id-tail-tail>
									<expr-tail>
										<andorterm-tail>
											<ineqterm-tail>
												<addterm-tail>
													<multterm-tail>
														<factor-tail>
															<lvalue>
														<multterm2>
													<addterm2>
														<addop>
															+
														<multterm>
															<factor>
																id
																<factor-tail>
																	<lvalue>
																		[
																		<expr>
																			<andorterm>
																				<ineqterm>
																					<addterm>
																						<multterm>
																							<factor>
																								id
																								<factor-tail>
																									<lvalue>
																							<multterm2>
																						<addterm2>
																					<ineqterm2>
																				<andorterm2>
																		]
																		<lvalue>
															<multterm2>
																<multop>
																	*
																<factor>
																	id
																	<factor-tail>
																		<lvalue>
																			[
																			<expr>
																				<andorterm>
																					<ineqterm>
																						<addterm>
																							<multterm>
																								<factor>
																									id
																									<factor-tail>
																										<lvalue>
																								<multterm2>
																							<addterm2>
																						<ineqterm2>
																					<andorterm2>
																			]
																			<lvalue>
																<multterm2>
														<addterm2>
												<ineqterm2>
											<andorterm2>
						;
					<stat-seq>
				enddo
				;
			<stat-seq>
				<stat>
					id
					<stat-id>
						(
						<expr-list>
							<expr>
								<andorterm>
									<ineqterm>
										<addterm>
											<multterm>
												<factor>
													id
													<factor-tail>
														<lvalue>
												<multterm2>
											<addterm2>
										<ineqterm2>
									<andorterm2>
							<expr-list-tail>
						)
					;
				<stat-seq>
		end