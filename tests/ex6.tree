$
	<tiger-program>
		let
		<declaration-segment>
			<type-declaration-list>
			<var-declaration-list>
				<var-declaration>
					var
					<id-list>
						id
						<id-list-tail>
							,
							id
							<id-list-tail>
					:
					<type-id>
						id
					<optional-init>
					;
				<var-declaration-list>
			<funct-declaration-list>
		in
		<stat-seq>
			<stat>
				id
				<stat-id>
					<lvalue>
					:=
					<stat-id-tail>
						<expr>
							<andorterm>
								<ineqterm>
									<addterm>
										<multterm>
											<factor>
												<const>
													INTLIT
											<multterm2>
										<addterm2>
									<ineqterm2>
								<andorterm2>
				;
			<stat-seq>
				<stat>
					while
					<expr>
						<andorterm>
							<ineqterm>
								<addterm>
									<multterm>
										<factor>
											(
											<expr>
												<andorterm>
													<ineqterm>
														<addterm>
															<multterm>
																<factor>
																	id
																	<factor-tail>
																		<lvalue>
																<multterm2>
															<addterm2>
														<ineqterm2>
															<ineq>
																<
															<addterm>
																<multterm>
																	<factor>
																		<const>
																			INTLIT
																	<multterm2>
																<addterm2>
															<ineqterm2>
													<andorterm2>
											)
										<multterm2>
									<addterm2>
								<ineqterm2>
							<andorterm2>
					do
					<stat-seq>
						<stat>
							id
